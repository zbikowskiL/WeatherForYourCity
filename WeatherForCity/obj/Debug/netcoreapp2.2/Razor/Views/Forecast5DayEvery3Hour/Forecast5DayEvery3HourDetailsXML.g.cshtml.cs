#pragma checksum "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\Forecast5DayEvery3Hour\Forecast5DayEvery3HourDetailsXML.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bfd859c15b918dedf4e506d990c8428574d0eedc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Forecast5DayEvery3Hour_Forecast5DayEvery3HourDetailsXML), @"mvc.1.0.view", @"/Views/Forecast5DayEvery3Hour/Forecast5DayEvery3HourDetailsXML.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Forecast5DayEvery3Hour/Forecast5DayEvery3HourDetailsXML.cshtml", typeof(AspNetCore.Views_Forecast5DayEvery3Hour_Forecast5DayEvery3HourDetailsXML))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\_ViewImports.cshtml"
using WeatherForCity;

#line default
#line hidden
#line 2 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\_ViewImports.cshtml"
using WeatherForCity.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bfd859c15b918dedf4e506d990c8428574d0eedc", @"/Views/Forecast5DayEvery3Hour/Forecast5DayEvery3HourDetailsXML.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0133b3c12bd3cab840fec0839a7e6b2845b99a87", @"/Views/_ViewImports.cshtml")]
    public class Views_Forecast5DayEvery3Hour_Forecast5DayEvery3HourDetailsXML : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<WeatherForCity.Models.ViewModels.Forecast5DayEvery3HourXMLViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Forecast5DayEvery3Hour", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Forecast5DayEvery3HourXML", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\Forecast5DayEvery3Hour\Forecast5DayEvery3HourDetailsXML.cshtml"
  
    ViewData["Title"] = "Forecast5DayEvery3HourDetailsXML";

#line default
#line hidden
            BeginContext(144, 248, true);
            WriteLiteral("\r\n\r\n<div class=\"container sticky\" style=\"z-index: 3; width: 100%; padding: 0px; background-color: white;\">\r\n    <div class=\"row\">\r\n        <h3 class=\"col col-md-12\" style=\"padding-bottom: 5px;\">\r\n            Pięciodniowa prognoza pogody dla miasta ");
            EndContext();
            BeginContext(393, 14, false);
#line 10 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\Forecast5DayEvery3Hour\Forecast5DayEvery3HourDetailsXML.cshtml"
                                               Write(Model.CityName);

#line default
#line hidden
            EndContext();
            BeginContext(407, 96, true);
            WriteLiteral("\r\n        </h3>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            ");
            EndContext();
            BeginContext(503, 647, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bfd859c15b918dedf4e506d990c8428574d0eedc6644", async() => {
                BeginContext(632, 511, true);
                WriteLiteral(@"
                <div class=""input-group mb-3"" style=""margin-bottom: 0;"">
                    <input type=""text"" class=""form-control"" id=""cityName"" name=""cityName"" placeholder=""Wpisz nazwę miasta"" aria-label=""Recipient's username"" aria-describedby=""basic-addon2"" required>
                    <div class=""input-group-append"">
                        <button class=""btn btn-outline-secondary"" id=""button"" type=""submit"">Pobierz pogodę</button>
                    </div>
                </div>
            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1150, 798, true);
            WriteLiteral(@"
        </div>
    </div>
    <div class=""row"">
        <div class=""col col-md-12"">
            <div class=""chart"" id=""chart_div""></div>
        </div>
    </div>
    <div class=""row"" style=""margin-top: 2px;"">
        <div class=""col-md-12 text-center"" style=""visibility: hidden; background-color: white;"" id=""buttongroup"">
            <div class=""btn-group"" role=""group"" aria-label=""Basic example"">
                <button type=""button"" class=""btn btn-success"" id=""showTempRain"">Pogoda</button>
                <button type=""button"" class=""btn btn-warning"" id=""showTemp"">Temperatura</button>
                <button type=""button"" class=""btn btn-primary"" id=""showRain"">Deszcz</button>
            </div>
        </div>
    </div>
</div>

    </br>

<div class=""container"">

");
            EndContext();
#line 45 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\Forecast5DayEvery3Hour\Forecast5DayEvery3HourDetailsXML.cshtml"
     foreach (var distinctDate in Model.DistinctDates)
    {

#line default
#line hidden
            BeginContext(2011, 216, true);
            WriteLiteral("        <table class=\"table col-md-8\" style=\"margin-bottom: 0px;\">\r\n\r\n            <tbody>\r\n\r\n                <tr>\r\n                    <td colspan=\"2\" style=\"width: 100%\" class=\"bg-light\">\r\n\r\n                        ");
            EndContext();
            BeginContext(2228, 47, false);
#line 54 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\Forecast5DayEvery3Hour\Forecast5DayEvery3HourDetailsXML.cshtml"
                   Write(DateTime.Parse(distinctDate).ToLongDateString());

#line default
#line hidden
            EndContext();
            BeginContext(2275, 9, true);
            WriteLiteral(" &nbsp;\r\n");
            EndContext();
#line 55 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\Forecast5DayEvery3Hour\Forecast5DayEvery3HourDetailsXML.cshtml"
                         if (DateTime.Parse(distinctDate).ToLongDateString() == DateTime.Today.ToLongDateString())
                        {

#line default
#line hidden
            BeginContext(2427, 50, true);
            WriteLiteral("                            <span>Dzisiaj</span>\r\n");
            EndContext();
#line 58 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\Forecast5DayEvery3Hour\Forecast5DayEvery3HourDetailsXML.cshtml"
                        }

#line default
#line hidden
            BeginContext(2504, 54, true);
            WriteLiteral("\r\n                    </td>\r\n                </tr>\r\n\r\n");
            EndContext();
#line 63 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\Forecast5DayEvery3Hour\Forecast5DayEvery3HourDetailsXML.cshtml"
                 foreach (var item in Model.Weather5DayEvery3HoursList)
                {
                    if (distinctDate == item.Date)
                    {

#line default
#line hidden
            BeginContext(2725, 159, true);
            WriteLiteral("                        <tr>\r\n                            <td style=\"width: 40%; padding-left: 2vw; vertical-align: middle;\">\r\n                                ");
            EndContext();
            BeginContext(2885, 9, false);
#line 69 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\Forecast5DayEvery3Hour\Forecast5DayEvery3HourDetailsXML.cshtml"
                           Write(item.Hour);

#line default
#line hidden
            EndContext();
            BeginContext(2894, 38, true);
            WriteLiteral("\r\n                                <img");
            EndContext();
            BeginWriteAttribute("src", " src=\"", 2932, "\"", 2984, 2);
            WriteAttributeValue("", 2938, "http://openweathermap.org/img/w/", 2938, 32, true);
#line 70 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\Forecast5DayEvery3Hour\Forecast5DayEvery3HourDetailsXML.cshtml"
WriteAttributeValue("", 2970, item.IconName, 2970, 14, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2985, 342, true);
            WriteLiteral(@" />
                            </td>
                            <td style=""width: 60%; vertical-align: middle; padding-bottom: 0px;"">
                                <p style=""margin-bottom: 2px;"">
                                    <span style=""display:inline-block; width: 70px;"" class=""rounded bg-secondary text-white text-center""> ");
            EndContext();
            BeginContext(3328, 16, false);
#line 74 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\Forecast5DayEvery3Hour\Forecast5DayEvery3HourDetailsXML.cshtml"
                                                                                                                                     Write(item.Temperature);

#line default
#line hidden
            EndContext();
            BeginContext(3344, 56, true);
            WriteLiteral(" <sup>o</sup>C </span> &nbsp; <span class=\"font-italic\">");
            EndContext();
            BeginContext(3401, 16, false);
#line 74 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\Forecast5DayEvery3Hour\Forecast5DayEvery3HourDetailsXML.cshtml"
                                                                                                                                                                                                              Write(item.Description);

#line default
#line hidden
            EndContext();
            BeginContext(3417, 120, true);
            WriteLiteral("</span>\r\n                                </p>\r\n                                <p>\r\n                                    ");
            EndContext();
            BeginContext(3538, 13, false);
#line 77 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\Forecast5DayEvery3Hour\Forecast5DayEvery3HourDetailsXML.cshtml"
                               Write(item.Pressure);

#line default
#line hidden
            EndContext();
            BeginContext(3551, 32, true);
            WriteLiteral(" hpa &nbsp; <span>zachmurzenie: ");
            EndContext();
            BeginContext(3584, 18, false);
#line 77 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\Forecast5DayEvery3Hour\Forecast5DayEvery3HourDetailsXML.cshtml"
                                                                             Write(item.CloudsPrecent);

#line default
#line hidden
            EndContext();
            BeginContext(3602, 54, true);
            WriteLiteral("% </span> &nbsp;\r\n                                    ");
            EndContext();
            BeginContext(3657, 14, false);
#line 78 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\Forecast5DayEvery3Hour\Forecast5DayEvery3HourDetailsXML.cshtml"
                               Write(item.WindSpeed);

#line default
#line hidden
            EndContext();
            BeginContext(3671, 44, true);
            WriteLiteral(" m/s\r\n                                </p>\r\n");
            EndContext();
#line 80 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\Forecast5DayEvery3Hour\Forecast5DayEvery3HourDetailsXML.cshtml"
                                 if (item.WindDirection != "")
                                {

#line default
#line hidden
            BeginContext(3814, 112, true);
            WriteLiteral("                                    <p>\r\n                                        <span>Kierunek wiatru`:</span> ");
            EndContext();
            BeginContext(3927, 18, false);
#line 83 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\Forecast5DayEvery3Hour\Forecast5DayEvery3HourDetailsXML.cshtml"
                                                                  Write(item.WindDirection);

#line default
#line hidden
            EndContext();
            BeginContext(3945, 44, true);
            WriteLiteral("\r\n                                    </p>\r\n");
            EndContext();
#line 85 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\Forecast5DayEvery3Hour\Forecast5DayEvery3HourDetailsXML.cshtml"
                                }

#line default
#line hidden
            BeginContext(4024, 68, true);
            WriteLiteral("\r\n                            </td>\r\n                        </tr>\r\n");
            EndContext();
#line 89 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\Forecast5DayEvery3Hour\Forecast5DayEvery3HourDetailsXML.cshtml"
                    }
                }

#line default
#line hidden
            BeginContext(4134, 42, true);
            WriteLiteral("\r\n            </tbody>\r\n        </table>\r\n");
            EndContext();
#line 94 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\Forecast5DayEvery3Hour\Forecast5DayEvery3HourDetailsXML.cshtml"
    }

#line default
#line hidden
            BeginContext(4183, 10, true);
            WriteLiteral("</div>\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(4210, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(4216, 55, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bfd859c15b918dedf4e506d990c8428574d0eedc19011", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(4271, 2101, true);
                WriteLiteral(@"

    <script type=""text/javascript"">
        
        $(document).ready(function () {
            var cityName = $('#inputCity').val();

            var buttonGroup = document.getElementById('buttongroup');
            setTimeout(function () {
                buttonGroup.style.visibility = ""visible"";
            }, 1500);

            var options = {
                annotations: {
                    alwaysOutside: true,
                    textStyle: {
                        fontSize: 14,
                        color: '#000',
                        auraColor: 'none'
                    }
                },
                animation: {
                    startup: true,
                    duration: 1000,
                    easing: 'linear',

                },
                legend: {
                    position: 'none',
                },
                series: {
                    0: {
                        type: ""area"",
                        targetAxisIndex: 0");
                WriteLiteral(@",
                        color: ""#FBD453""
                    },
                    1: {
                        type: ""bars"",
                        targetAxisIndex: 1,
                        color: ""#8FC2E3"",
                    }
                },
                hAxis: {
                    title: 'Godzina'
                },
                vAxes: {
                    0: {
                        title: 'Temp. (Celsjusz)',
                        viewWindowMode: 'explicit'
                    },
                    1: {
                        title: 'Opady [mm]',
                        viewWindowMode: 'explicit',
                        viewWindow: {
                            max: 10,
                            min: 0
                        }
                    }
                }
            };
            
            $.ajax({
                type: 'GET',
                dataType: ""json"",
                contentType: ""application/json"",
                url: ");
                WriteLiteral("\'/Forecast5DayEvery3Hour/DataForChartXML?cityName=\'+\'");
                EndContext();
                BeginContext(6373, 14, false);
#line 163 "C:\Users\Łukasz\source\Projekty\proby chart2\WeatherForCity\WeatherForCity\Views\Forecast5DayEvery3Hour\Forecast5DayEvery3HourDetailsXML.cshtml"
                                                                     Write(Model.CityName);

#line default
#line hidden
                EndContext();
                BeginContext(6387, 7202, true);
                WriteLiteral(@"',
                success: function (result) {
                    google.charts.load('current', { packages: ['corechart', 'line', ] });
                    google.charts.setOnLoadCallback(function () {
                        drawChart(result, options)
                    });
                    console.log(result)
                }

            });



            function drawChart(result, options) {

                var data = new google.visualization.DataTable();
                data.addColumn('string', 'Godzina');
                data.addColumn('number', 'Temperatura (Celsjusz)');
                data.addColumn({ type: 'string', role: 'annotation' });
                data.addColumn('number', 'Opady [mm]');
                data.addColumn({ type: 'string', role: 'annotation' });
                var dataArray = [];
                console.log(result);

                $.each(result, function (i, obj) {
                    dataArray.push([obj.time, obj.temperature, obj.temperatureDe");
                WriteLiteral(@"scryption, obj.precipitation, obj.precipitationDescryption]);
                });

                data.addRows(dataArray);
               
                var tempOptions = {
                    annotations: {
                        alwaysOutside: true,
                        textStyle: {
                            fontSize: 14,
                            color: '#000',
                            auraColor: 'none'
                        }
                    },
                    animation: {
                        startup: true,
                        duration: 1000,
                        easing: 'linear',

                    },
                    legend: {
                        position: 'none',
                    },
                    series: {
                        0: {
                            type: ""area"",
                            targetAxisIndex: 0,
                            color: ""#FBD453""
                        },
                        1: {");
                WriteLiteral(@"
                            type: ""bars"",
                            targetAxisIndex: 1,
                            color: ""#8FC2E3"",
                        }
                    },
                    hAxis: {
                        title: 'Godzina'
                    },
                    vAxes: {
                        0: {
                            title: 'Temp. (Celsjusz)',
                            viewWindowMode: 'explicit'
                        }, 
                        1: {
                            title: 'Opady [mm]',
                            viewWindowMode: 'explicit',
                            viewWindow: {
                                max: 10,
                                min: 0
                            }
                        }
                    }
                };

                var rainOptions = {
                    annotations: {
                        alwaysOutside: true,
                        textStyle: {
             ");
                WriteLiteral(@"               fontSize: 14,
                            color: '#000',
                            auraColor: 'none'
                        }
                    },
                    animation: {
                        startup: true,
                        duration: 1000,
                        easing: 'linear',

                    },
                    legend: {
                        position: 'none',
                    },
                    series: {
                        0: {
                            type: ""bars"",
                            targetAxisIndex: 0,
                            color: ""#8FC2E3""
                        },
                    },
                    hAxis: {
                        title: 'Godzina'
                    },
                    vAxes: {
                        0: {
                            title: 'Opady [mm]',
                            viewWindowMode: 'explicit',
                            viewWindow: {
             ");
                WriteLiteral(@"                   max: 10,
                                min: 0
                            }
                        },
                        1: {
                            title: 'Opady [mm]',
                            viewWindowMode: 'explicit',
                            viewWindow: {
                                max: 10,
                                min: 0
                            }
                        }
                    }
                };


                function drawTemp() {
                    document.getElementById(""showTempRain"").disabled = false;
                    document.getElementById(""showTemp"").disabled = true;
                    document.getElementById(""showRain"").disabled = false;
                    view = new google.visualization.DataView(data);
                    view.hideColumns([3]);
                    view.hideColumns([4]);
                    chart.draw(view, tempOptions);
                }

                function drawRai");
                WriteLiteral(@"n() {
                    document.getElementById(""showTempRain"").disabled = false;
                    document.getElementById(""showTemp"").disabled = false;
                    document.getElementById(""showRain"").disabled = true;
                    view = new google.visualization.DataView(data);
                    view.hideColumns([1]);
                    view.hideColumns([2]);
                    chart.draw(view, rainOptions);
                }


                function drawTempAndRain() {
                    document.getElementById(""showTempRain"").disabled = true;
                    document.getElementById(""showTemp"").disabled = false;
                    document.getElementById(""showRain"").disabled = false;
                    view = new google.visualization.DataView(data);
                    view.hideColumns([4]);
                    chart.draw(view, options);
                }

                var showTemp = document.getElementById(""showTemp"");
                showTemp.onclick");
                WriteLiteral(@" = function () {
                    drawTemp();
                }

                var showRain = document.getElementById(""showRain"");
                showRain.onclick = function () {
                    drawRain();
                }

                var showTempRain = document.getElementById(""showTempRain"");
                showTempRain.onclick = function () {
                    drawTempAndRain();
                }

                var chart = new google.visualization.ComboChart(document.getElementById('chart_div'));

                chart.draw(data, options);

                $(window).resize(function () {
                    drawTemp();
                });

                //$(window).scroll(function () {
                //    var sticky = $('.sticky'),
                //        scroll = $(window).scrollTop();

                //    if (scroll >= 550) sticky.addClass('fixed');
                //    else sticky.removeClass('fixed');
                //});
            }


   ");
                WriteLiteral("      });\r\n\r\n\r\n    </script>\r\n\r\n\r\n");
                EndContext();
            }
            );
            BeginContext(13592, 16, true);
            WriteLiteral("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<WeatherForCity.Models.ViewModels.Forecast5DayEvery3HourXMLViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
